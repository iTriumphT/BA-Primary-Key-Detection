1994,towards real-time goms model expert behaviour highly interactive task,present analysis expert performing highly interactive computer task analysis us goms model specifying goal operator method selection rule used expert two model presented one function-level operator perform high-level function domain one keystroke-level operator describe hand movement segment behaviour expert accomplished  function  function-level model predicted observed behaviour well keystroke-level model predicted half observed hand movement  including discrepancy model discussed
1993,intelligent control external software system,paper focus relatively unexplored set issue arises intelligent agent attempt use external software system  issue illustrated initially context complex agent-ess interaction engineering design example approaching area perspective artificial intelligence  research find general agent-ess interaction vary widely characterize possible variation term performance capability required skill level performance exhibited knowledge source capability acquired exploring variation using soar candidate ai agent document briefly describes seven soar-based project early stage development agent-ess issue addressed conclude placing agent-ess research context work software technology discus research agenda set area
1993,reflection knowledge level,
1993,applying architecture general intelligence reduce scheduling effort,system called merle-soar described demonstrates specific architecture general intelligence learning  used reduce scheduling effort solving simple scheduling problem particular describe merle-soar schedule sequence job single bottleneck machine job shop knowledge dispatching acquired examining human expert performs task cast search rule study conducted examined extent learning could contribute decrease scheduling effort specifically contribution learning within-tasks exploredthe change reasoning effort solving particular scheduling problem knowledge accumulated successive trial  indicated dramatic reduction scheduling effort  obtained knowledge gained early scheduling task subsequently applied later task reduce deliberation knowledge gained one trial successfully reduced deliberation effort subsequent trial additionally reduction exhibited general power law learning documented psychological study skill acquisition
1992,learning 10 000 chunk whats like,paper describes initial exploration large learning system ie system learn large number rule given well-known utility problem learning system efficiency question major concern question much broader efficiency eg effectiveness learned rule change scale investigation us single problem-solving learning system dispatcher-soar begin get answer question dispatcher-soar currently learned  new production top initial system  production total size  production represents one largest production system existence far largest number rule ever learned ai system paper present variety data experiment dispatcher-soar raise important question large learning system
1991,preliminary analysis soar architecture basis general intelligence,article take step towards providing analysis soar architecture basis general intelligence included discussion basic assumption underlying development soar description soar cast term theoretical idea multiple level description example soar performing multi-column subtraction three analysis soar natural task source power scope limit
1991,effectiveness task-level parallelism production system,large production system  continue suffer extremely slow execution limit utility practical application well research setting investigation speeding system focused match  parallelism although good speed-ups achieved process investigation revealed limitation total speed-up available source limited speed-up insufficient alleviate problem slow execution large-scale production system implementation large-scale system expected increase researcher develop increasingly competent production system paper focus task-level parallelism obtained high-level decomposition production system speed-ups obtained task-level parallelism multiply speed-ups obtained match parallelism vehicle investigation task-level parallelism spam high-level vision system implemented production system spam mature research system typical run requiring   production firing execution time order   cpu hour report encouraging speed-ups task-level parallelism spam  parallel implementation show near linear speed-ups  fold using  processor point way substantial  speed-ups task-level parallelism present characterization task-level parallelism production system describe methodology selecting applying particular approach parallelize spam additionally report speed-ups obtained use shared virtual memory  implementation overall task-level parallelism received much attention literature experience illustrates potentially important tool speeding large-scale production system
1990,problem expensive chunk solution restricting expressiveness,soar architecture system intended capable general intelligence chunking simple experience-based learning mechanism soar learning mechanism chunking creates new item information called chunk based  problem-solving store knowledge base chunk accessed used appropriate later situation avoid problem-solving required determine already well-established chunking improves performance soar viewed term subproblems required number step within subproblem however despite reduction number step sometimes may severe degradation total run time problem arises due toexpensive chunk ie chunk require large amount effort accessing knowledge base pose major problem soar since presence guarantee given soar performancein article establish expensive chunk exist analyze cause use analysis propose solution expensive chunk solution based notion restricting expressiveness representational language guarantee chunk formed require limited amount accessing effort analyze tradeoff involved restricting expressiveness present empirical evidence support analysis
1990,effectiveness task-level parallelism high-level vision,large production system  continue suffer extremely slow execution limit utility practical application well research setting investigation speeding system focused match  parallelism although good speed-ups achieved process investigation revealed limitation total speed-up available source limited speed-up insufficient alleviate problem slow execution large-scale production system implementation large-scale system expected increase researcher develop increasingly competent production system paper focus task-level parallelism obtained high-level decomposition production system speed-ups obtained task-level parallelism multiply speed-ups obtained match parallelism vehicle investigation task-level parallelism spam high-level vision system implemented production system spam mature research system typical run requiring   production firing execution time order   cpu hour report encouraging speed-ups task-level parallelism spam — parallel implementation show near linear speed-ups  fold using  processor point way substantial  speed-ups task-level parallelism present characterization task-level parallelism production system describe methodology selecting applying particular approach parallelize spam additionally report speed-ups obtained use shared virtual memory  implementation overall task-level parallelism received much attention literature experience illustrates potentially important tool speeding large-scale production system
1989,high-speed implementation rule-based system,rule-based system widely used artificial intelligence modeling intelligent behavior building expert system rule-based program however extremely computation intensive run quite slowly slow speed execution prohibited use rule-based system domain requiring high performance real-time response paper explore various method speeding execution rule-based system particular examine role parallelism high-speed execution rule-based system study architectural issue design computer rule-based system  show contrary initial expectation speed-up obtained parallelism quite limited tenfold reason small speed-up  small number rule relevant change data memory  large variation processing requirement relevant rule  small number change made data memory synchronization step furthermore observe obtain limited factor tenfold speed-up necessary exploit parallelism fine granularity propose suitable architecture exploit fine-grain parallelism shared-memory multiprocessor - processor using multiprocessor possible obtain execution speed  rule-firings/set speed significantly higher obtained proposed parallel implementation rule-based system
1989,cumulating science hci s-r compatibility transcription typing,keeping claim applied psychology hci must based cumulative work within unified framework present two extension model human processor model immediate response behavior stimulus-response  compatibility presented extended new domain transcription typing parameter estimated using one s-r compatibility experiment used make priori prediction four s-r compatibility task carried area typing model expert transcription typing described prediction typing phenomenon demonstrated summarized
1989,problem space approach expert system specification,one view expert system development separate endeavor two part first domain expert aid knowledge engineer articulates procedure performing desired task external form next knowledge engineer operationalizes external description within computer language paper examines nature process operationalize natural task description exhibit language based computational model problem space process quite simple describe process detail discus aspect computational model determine simplicity process
1988,parallel implementation ops5 encore multiprocessor result analysis, reported parallelism production system  simulation -very real parallel implementation exist paper present  parallel implementation ops encore multiprocessor implementation exploit finegrained parallelism achieve significant speed-ups one application achieve  fold speed-up using  process implementation also distinct parallel implementation parallelize highly optimized c-based implementation ops running uniprocessor c-based implementation – time faster standard lisp implementation distributed carnegie mellon university addition presenting performance number paper discus detail parallel implementation-the data structure used amount contention observed shared data structure technique used reduce contention
1988,integrating multiple source knowledge designer soar automatic algorithm designer,designing algorithm requires diverse knowledge general problem-solving algorithm design implementation technique application domain knowledge come variety source including previous design experience ability integrate larowledge diverse source appears critical success human algorithm designer integration feasible automatic design system especially supported general problem-solving learning mechanism soar architecture system designer-soar design several simple generate-and-test divide-and-conquer algorithm system already us several level abstraction generalizes example learns experience transferring knowledge acquired design one algorithm aid design others
1988,chunk expensive,soar attempt realize set hypothesis nature general intelligence within single system one central hypothesis chunking soar simple experience-based learning mechanism form basis general learning mechanism already well established addition chunk improves performance soar great deal viewed term subproblems required number step within subproblem high level view take account potential offsetting cost arise various computational effect paper investigation computational effect expensive chunk chunk add significantly time per step individually expensive decompose cause expensive chunk three component identify feature task environment give rise discus implication existence expensive chunk complete implementation soar
1988,parallel ops5 encore multimax, reported parallelism production system  simulation  -very real parallel implementation exist paper present  parallel implementation ops encore multiprocessor implementation exploit fine-grained parallelism achieve significant speed-ups one application achieve  fold speed-up using  process implementation also distinct parallel implementation parallelize highly optimized c-based implementation ops running uniprocessor c-based implementation - time faster standard lisp implementation distributed carnegie mellon university addition presenting performance number paper discus amount contention observed shared data structure technique used reduce contention
1988,soar/psm-e investigating match parallelism learning production system,soar attempt realize set hypothesis nature general intelligence within single system soar us production system  encode knowledge base learning mechanism chunking add production continuously production system process searching relevant knowledge matching known performance bottleneck production system psm-e c-based implementation ops production system encore multimax achieved significant speedup matching paper describe implementation soar/psm-e soar encore multimax built top psm-e first describe extension modification required psm-e order support soar especially capability adding production run time required chunking present speedup obtained soar/psm-e discus effect chunking parallelism also analyze performance system identify bottleneck limiting parallelism finally discus work progress deal
1987,soar architecture general intelligence,ultimate goal work cognitive architecture provide foundation system capable general intelligent behavior goal provide underlying structure would enable system perform full range cognitive task employ full range problem solving method representation appropriate task learn aspect task performance article present soar implemented proposal architecture describe organizational principle system currently implemented demonstration capability
1987,knowledge level learning soar,article demonstrate knowledge level learning performed within soar architecture demonstrate soar acquire new knowledge deductively implied existing knowledge demonstration employ soar chunking mechanism-a mechanism acquires new production goal-baaed experience-as learning mechanism chunking previously demonstrated useful symbol level learning mechanism able speed performance existing system first demonstration ability perform knowledge level learning two simple declarative-memory task employed demonstration recognition recall
1986,information processing language v ibm 650,
1986,straightening softening response carroll campbell,carroll campbell exercised straw man subscribed u process position accurately represented reply restate clearly position actually argue underlying issue seems concern advantage using technical psychological theory identify underlying mechanism human-computer interaction argue theory important part science human-computer interaction argue technical theory must considered context us put use theory help determine good approximation degree formalization justified appropriate commingling qualitative quantitative technique technical theory encourage cumulative progress abetting classical scientific heuristic divide conquer
1986,chunking soar anatomy general learning mechanism,article describe approach construction general learning mechanism based chunking soar chunking learning mechanism acquires rule goal-based experience soar general problem-solving architecture rule-based memory previous work demonstrated combination chunking soar could acquire search-control knowledge  operator implementation rule search-based puzzle task knowledge-based expert-systems task work examine anatomy chunking soar provide new demonstration learning capability involving acquisition use macro-operators
1986,parallel algorithm architecture rule-based system,rule-based system surface appear capable exploiting large amount parallelism—it possible match rule data memory parallel practice however show speed-up parallelism quite limited le -fold reason small speed-up  small number rule relevant change data memory  large variation processing required relevant rule  small number change made data memory synchronization step furthermore observe obtain limited factor -fold speed-up necessary exploit parallelism fine granularity propose suitable architecture exploit fine-grain parallelism bus-based shared-memory multiprocessor - processor using multiprocessor  possible obtain execution speed  rule-firings/sec speed significantly higher obtained proposed parallel implementation rule-based system
1985,prospect psychological science human-computer interaction,paper discus prospect psychology playing significant role progress human-computer interaction field hard science  tendency drive softer science even softer science important contribution make possible computer science artificial intelligence contribution human-computer interaction mature could happen psychology suggested trend might prevented hardening applicable psychological science approach however criticized ground resulting body knowledge would low level limited scope late affect computer technology difficult apply prospect overcoming obstacle analyzed
1985,r1-soar experiment knowledge-intensive programming problem-solving architecture,paper present experiment knowledge-intensive programming within general problem-solving production-system architecture called soar soar knowledge encoded within set problem space yield system capable reasoning first principle expertise consists additional rule guide complex problem-space search substitute expensive problem-space operator resulting system us knowledge search relevant expertise knowledge acquired either programmed chunking mechanism automatically learns new rule reflecting  implicit knowledge problem space approach demonstrated computer-system configuration task task performed expert system r
1984,introduction comtex microfiche edition report artificial intelligence carnegie-mellon university,originally complex information processing name herb simon chose  describe area working didnt take long became artificial intelligence  coined john mccarthy term stuck firmly despite continual grumbling name would twice fair  complex information processing life title cip working paper series started herb simon  still accumulating entry  however  much work artificial intelligence related psychology began appear technical report computer science department report never part coherent numbered series  proliferated direction starting early  become subject general mailing thus began form everyone think cmu computer science technical report
1984,problem solving technique design algorithm,studying problem-solving technique people use design algorithm learn something building system automatically derive algorithm assist human designer paper present model algorithm design based analysis protocol two subject designing three convex hull algorithm subject work mainly data-flow problem space object representation partially specified algorithm small number general-purpose operator construct modify representation operator adapted current problem state means-ends analysis problem space also includes knowledge-rich schema divide conquer subject incorporate algorithm particularly versatile problem-solving method problem space symbolic execution used refine verify explain component algorithm subject also work task-domain space geometry interplay problem solving two space make possible process discovery observed time subject take design algorithm proportional number component algorithm data-flow representation finally detail problem space provide model building robust automated system
1984,initial assessment architecture production system,although production system appropriate many application artificial intelligence expert system area application fast enough used used large problem severe time constraint speed increase essential recognizing substantial increase likely achieved software technique psm project begun investigating use hardware support production system interpreter first task undertaken project attempt understand space architectural possibility trade-off involved articlc present initial finding project briefly preliminary  indicate attractive architecture production system machine containing small number simple fast processor
1984,towards chunking general learning mechanism,power law practice state performance task improves power-law function number time task performed article describe recent work model effect model called chunking theory learning based notion chunking limited version model implemented within xaps production system architecture applied -choice reaction-time task  task performance improved  moreover practice curve power law form
1983,automatic algorithm designer initial implementation,paper outline specification algorithm-design system  describes implementation specification combination frame production system implementation design occurs two problem space -- one algorithm one task-domain partially worked algorithm represented configuration data-flow component small number general-purpose operator construct modify representation operator adapted different situation instantiation means-ends analysis rule data-flow space also includes symbolic test-case execution rule drive component-refinement orocess exposing problem opportunity domain space geometric image support testcase execution domain-specific problem solving recognition discovery
1983,universal weak method summary result,weak method occur pervasively ai system may form basic method intelligent system purpose paper characterize weak method explain arise intelligent system propose organization called universal weak method provides functionality weak method universal weak method organizational scheme knowledge produce appropriate search behaviour given available task-domain knowledge present problem solving architecture realize universal weak method also demonstrate universal weak method variety weak method set task
1982,learning chunking summary task model,gridded electron tube suitable generating high power high frequency cathode surface composed set parallel emitting strip separated non-emitting strip massive grid bar aligned non-emitting strip thereby reducing grid current interception providing thermal dissipation attached side grid bar facing cathode array closely spaced fine wire increase electric field due grid emitting surface decrease penetration field due anode thereby increasing transconductance amplification factor decreasing transit time electron improving uniformity emission current density
1982,naive algorithm design technique case study,studying people design algorithm learn something building system automatically derive algorithm assist human designer present  protocol analysis one subject designing convex hull algorithm conclude subject work mainly data flow problem space includes representation ambiguous partially specified algorithm variety search control method general purpose operator powerful matching process make operator applicable current problem state detail problem space provide model building robust automated system
1980,keystroke-level model user performance time interactice system,gridded electron tube suitable generating high power high frequency cathode surface composed set parallel emitting strip separated non-emitting strip massive grid bar aligned non-emitting strip thereby reducing grid current interception providing thermal dissipation attached side grid bar facing cathode array closely spaced fine wire increase electric field due grid emitting surface decrease penetration field due anode thereby increasing transconductance amplification factor decreasing transit time electron improving uniformity emission current density
1980,physical symbol system,occasion first conference cognitive science seems appropriate review basis common understanding various discipline estimate fundamental contribution far artificial intelligence computer science joint enterprise cognitive science notion physical symbol system ie concept broad class system capable manipulating symbol yet realizable physical universe notion symbol defined internal concept becomes hypothesis notion symbol includes symbol human use every day life paper attempt systematically plainly lay nature physical symbol system review way familiar thereby useless restatement fundamental important exercise
1977,speech understanding system,five-year interdisciplinary effort speech scientist computer scientist demonstrated feasibility programming computer system understand connected speech ie translate operational form respond accordingly operational system  accepts speech five speaker interprets -word vocabulary attains  percent sentence accuracy steering committee summary report describes project history problem goal 
1977,instructable production system basic design issue,full advantage incremental property production system yet exploited large scale promising vehicle task instructing system solve problem complex domain important express instruction language similar natural language without detailed knowledge inner structure system instruction close interaction system behaves preferred longer feedback loop independent learning system domain initially abstract job shop beginning system capability solving problem processing language building production interacting task environment part system subject instruction main problem-solving strategy permeates four system component based mean end analysis goal-subgoal search coupled explicit representation control knowledge system behavior far restricted simple environmental manipulation number must taught complex task done
1977,efficiency certain production system implementation,obvious method determining production satisfied given cycle involves matching production one time content working memory cost processing essentially linear product number production production memory number assertion working memory augmenting production system architecture mechanism enables knowledge similarity among production precomputed exploited run possible eliminate dependency size production memory addition architecture augmented mechanism enables knowledge degree production currently satisfied maintained across cycle dependency size working memory eliminated well particular production system architecture psg described two set mechanism increase efficiency presented determine effectiveness two augmented version psg compared experimentally original version
1977,speech understanding ai/ai speech understanding,panel review research speech understanding artificial intelligence two perspective contribution ai made speech understanding - resource ai used development speech understanding system contribution speech understanding made ai -  speech understanding program affected likely affect future ai research four topic identified major consideration multiple source knowledge required organized system control manage complex interaction involved language understanding comparison text speech input organization research-creating complex multisource knowledge-based system 
1977,knowledge representation,
1976,computer science empirical inquiry symbol search,computer science study phenomenon surrounding computer founder society understood well called association computing machinery machine—not hardware programmed living machine—is organism study
1976,pas-ii interactive task-free version automatic protocol analysis system,pas-ii computer program represents generalized version automatic protocol system  described pas-ii task-free interactive modular data analysis si system inferring information process used human verbal behavior solving problem output program problem behavior graph description subject changing knowledge state problem solving example system operation pas-ii analysis short cryptarithmetic protocol presented
1971,protocol analysis task artificial intelligence,attempting automate protocol analysis form data analysis psychology inferring information process used human verbal behaviour solving problem paper discus protocol analysis task artificial intelligence discussion based  current program pas-i creates description subject changing knowledge state verbal behaviour
1971,possibility computer structure 1971,computer structure come existence given epoch depends confluence several factorsthe underlying technology---its speed cost reliability etcthe structure actually conceivedthe demand computer system 
1971,model functional reasoning design,model design process developed two stage corresponding task environment design activity posing solving design problem use model top-down bottom-up discipline discussed example design object using semi-automated design system based model presented several issue raised model qualitative aspect suitability automated design line development discussed
1970,pm isp descriptive system computer structure,paper propose two notation describing aspect computer system currently handled melange informal notation two notation emerged by-product effort produce book computer structure  since feel slightly unusual present notation per se outside context particular design analysis effort use appropriate relate  history
1967,issue representation general problem solver,research reported investigation development computer program general problem solving capability investigation involved construction one computer program called general problem solver  accomplished modifying existing program conceived  newell j c shaw h simon
1965,quickscript - simscript like language g-20,quikscript simulation language based simscript programmed entirely algebraic language gate quikscript language internal implementation major difference quikscript simscript presented paper programming guide language rather attempt present flavor brief description simscript included sufficient description -gate render material understandable reader familiar algebraic language
1963,documentation ipl-v,ipl-v  programming language list processing symbol manipulation fifth series programming language developed part research effort artificial intelligence simulation cognitive process research started late  rand corporation carnegie institute technology remained centered two organization properly scientist thereof considered source language earlier ipls coded rand johnniac unique machine princeton class ipl-v one become “public” language necessary effort made document standardize language
1962,learning generality problem solving,memorandum discussion concept learning field artificial intelligence intimate relationship concept generality problem solving part continuing rand research effort area long range goal artificial intelligence imply ability program truly general purpose sense able acquire environment information necessary develop successfully way envisioned detail designer analysis given show learning generally viewed mean accomplish issue fundamental field pure artificial intelligence whole attempt develop sophisticated information process command control system illustrate question brought paper discussion given recent work done rand learning scheme general problem solver  detail specification scheme given subsequent rand memorandum 
1960,introduction information processing language v,paper informal introduction information processing language v  symbol list-structure manipulating language presently implemented ibm    contains discussion problem context series information processing language developed basic concept incorporated ipl-v complete description language found ipl-v programmer manual 
1959,report general problem-solving program,paper report computer program called gps-i general problem solving program construction investigation program part research effort author understand information process underlie human intellectual adaptive creative ability approach synthetic - construct computer program solve problem requiring intelligence adaptation discover variety program matched data human problem solving gps - grew earlier program logic theorist discovers proof theorem sentential calculus gps-i attempt fit recorded behavior college student trying discover proof purpose paper relate program human behaviour describe main characteristic ass capacity problem-solving mechanism paper present enough theoretical discussion problem-solving activity program seen attempt advance basic knowledge intellectual activity program assessed point view rather whether offer economical solution significant class problem major feature program worthy discussion recursive nature prolem-solving activity separation problem content problem-solving technique way increasing generality program two general problem-solving technique constitute repertoire means-ends analysis planning memory program organization used mechanize program  used code gps-i example given gps solves problem area elementary symbolic logic elementary algebra
1958,chess-playing program problem complexity,paper trace development digital computer program play chess work shannon turing los alamo group bernstein author treated turn effort program chess provide indication current progress understanding constructing complex intelligent mechanism
1956,logic theory machine-a complex information processing system,paper describe complex information processing system call logic theory machine capable discovering proof theorem symbolic logic system contrast systematic algorithm ordinarily employed computation relies heavily heuristic method similar observed  human problem solving activity specification written formal language nature pseudo-code suitable coding digital computer however present paper concerned exclusively specification system realization computer logic theory machine part program research understand complex information processing system specifying synthesizing substantial variety system empirical study
